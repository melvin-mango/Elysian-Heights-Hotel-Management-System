<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://unpkg.com/@tailwindcss/browser@4"></script>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <title>Home</title>
    <style>
      
    </style>
</head>
<body>

    <div x-data="{ open: false }" @click.away="open = false" class="relative w-full h-screen">
    <nav class="flex item-center h-16 w-screen justify-between p-5 md:px-10 lg:px-20 xl:px-40 2xl:px-60" style="background-color: #604020;">
        <div class="flex items-start justify-between space-x-10">
 <button @click="open = true" class="text-white ">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
  <path fill-rule="evenodd" d="M3 6.75A.75.75 0 0 1 3.75 6h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 6.75ZM3 12a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 12Zm0 5.25a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1-.75-.75Z" clip-rule="evenodd" />
</svg>
        </button>
        <p class="text-white font-bold">Receptionist</p>
        </div>
       

        <div class="flex item-center justtify-between space-x-4">
        <a href="#" onclick="openChat()" >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6 text-white">
  <path fill-rule="evenodd" d="M4.804 21.644A6.707 6.707 0 0 0 6 21.75a6.721 6.721 0 0 0 3.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 0 1-.814 1.686.75.75 0 0 0 .44 1.223ZM8.25 10.875a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25ZM10.875 12a1.125 1.125 0 1 1 2.25 0 1.125 1.125 0 0 1-2.25 0Zm4.875-1.125a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Z" clip-rule="evenodd" />
</svg>

        </a>

<!-- Notification Bell Icon -->


<script>
    let notifications = [];

    function toggleNotifications() {
        document.getElementById('notificationDropdown').classList.toggle('hidden');
        document.getElementById('notifBadge').classList.add('hidden');
    }


    function showNotification(title, message) {
        const notificationList = document.getElementById('notificationList');
        const notifBadge = document.getElementById('notifBadge');

        // Create Notification Item
        const notificationItem = document.createElement('div');
        notificationItem.classList.add('p-3', 'bg-gray-50', 'rounded-md', 'border', 'border-gray-200');

        // Title
        const notificationTitle = document.createElement('div');
        notificationTitle.classList.add('font-semibold', 'text-[#604020]');
        notificationTitle.textContent = title;

        // Message
        const notificationMessage = document.createElement('div');
        notificationMessage.classList.add('text-gray-700', 'text-sm', 'mt-1');
        notificationMessage.textContent = message;

        // Append
        notificationItem.appendChild(notificationTitle);
        notificationItem.appendChild(notificationMessage);
        notificationList.prepend(notificationItem);

        // Update Notification Count
        notifications.push({ title, message });
        notifBadge.textContent = notifications.length;
        notifBadge.classList.remove('hidden');

        // Auto-remove after 5 seconds
        setTimeout(() => {
            notificationItem.classList.add('opacity-0', 'transition-opacity', 'duration-500');
            setTimeout(() => notificationItem.remove(), 500);
        }, 5000);
    }

    // Example Usage (Triggers notification after 2 seconds)
    setTimeout(() => {
        showNotification("New Booking", "Guest booked Room 101.");
    }, 2000);
</script>

     <!-- Notification Bell Icon -->

    <a href="#" onclick="toggleNotifications()" class="relative bg-[#604020] rounded-full shadow-lg border inline-block">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6 text-white">
            <path d="M5.85 3.5a.75.75 0 0 0-1.117-1 9.719 9.719 0 0 0-2.348 4.876.75.75 0 0 0 1.479.248A8.219 8.219 0 0 1 5.85 3.5ZM19.267 2.5a.75.75 0 1 0-1.118 1 8.22 8.22 0 0 1 1.987 4.124.75.75 0 0 0 1.48-.248A9.72 9.72 0 0 0 19.266 2.5Z" />
            <path fill-rule="evenodd" d="M12 2.25A6.75 6.75 0 0 0 5.25 9v.75a8.217 8.217 0 0 1-2.119 5.52.75.75 0 0 0 .298 1.206c1.544.57 3.16.99 4.831 1.243a3.75 3.75 0 1 0 7.48 0 24.583 24.583 0 0 0 4.83-1.244.75.75 0 0 0 .298-1.205 8.217 8.217 0 0 1-2.118-5.52V9A6.75 6.75 0 0 0 12 2.25ZM9.75 18c0-.034 0-.067.002-.1a25.05 25.05 0 0 0 4.496 0l.002.1a2.25 2.25 0 1 1-4.5 0Z" clip-rule="evenodd" />
        </svg>
         <span id="notifBadge" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs w-5 h-5 flex items-center justify-center rounded-full hidden">0</span>
    </a>
    <!-- Notification Dropdown -->
<div id="notificationDropdown" class="hidden absolute right-0 mt-2 w-80 bg-white shadow-lg rounded-md border border-gray-300 overflow-hidden">
    <!-- Header with Close Button -->
    <div class="flex justify-between items-center p-3 text-gray-800 font-semibold bg-gray-100">
        <span>Notifications</span>
        <button onclick="toggleNotifications()" class="text-gray-600 text-2xl hover:text-yellow-800">
            &times; <!-- Close Icon -->
        </button>
    </div>

    <!-- Notification List -->
    <div id="notificationList" class="max-h-64 overflow-y-auto p-3 space-y-2">
        <!-- Notifications will be added here dynamically -->
    </div>
</div>

</div>
    </nav>
<!-- Chat Modal -->
<div id="chatModal" class="hidden fixed inset-0 bg-[#6040204d] bg-opacity-90 flex justify-center items-center">
    <div class="bg-white rounded-lg shadow-lg w-96">
        <!-- Chat Header -->
        <div class="flex justify-between items-center px-4 py-2 border-b bg-[#604020] text-white">
            <h2 class="text-lg font-semibold">Group Chat</h2>
            <button onclick="closeChat()" class="text-white text-2xl">&times;</button>
        </div>

        <!-- Chat Messages -->
        <div id="chatBox" class="p-4 h-64 overflow-y-auto space-y-2 bg-gray-100">
            <!-- Messages will be added here dynamically -->
        </div>

        <!-- Chat Input -->
        <div class="flex items-center p-4 border-t">
            <input type="text" id="messageInput" placeholder="Type a message..."
                class="flex-1 p-2 border rounded-md focus:outline-none focus:ring focus:ring-gray-400">
            <button onclick="sendMessage()"
                class="ml-2 bg-[#604020] text-white px-4 py-2 rounded-md hover:bg-opacity-90">
                Send
            </button>
        </div>
    </div>
</div>

<script>
    // Assume the receptionist is already logged in (for now, we'll use a hardcoded username)
    let receptionistUsername = "Receptionist_01"; // This should come from login data

    function openChat() {
        document.getElementById('chatModal').classList.remove('hidden');
    }

    function closeChat() {
        document.getElementById('chatModal').classList.add('hidden');
    }

    function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const messageText = messageInput.value.trim();
        
        if (messageText !== "") {
            const chatBox = document.getElementById('chatBox');

            // Create message container
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('bg-white', 'p-2', 'rounded-lg', 'shadow', 'max-w-xs', 'self-end');

            // Create username header (small text like WhatsApp)
            const usernameHeader = document.createElement('div');
            usernameHeader.classList.add('text-xs', 'text-gray-500', 'mb-1', 'font-medium');
            usernameHeader.textContent = receptionistUsername; // Show logged-in username

            // Create message content
            const messageContent = document.createElement('div');
            messageContent.classList.add('text-black');
            messageContent.textContent = messageText;

            // Append username and message to message container
            messageDiv.appendChild(usernameHeader);
            messageDiv.appendChild(messageContent);

            // Append message to chat
            chatBox.appendChild(messageDiv);
            chatBox.scrollTop = chatBox.scrollHeight; // Auto-scroll

            // Clear input field
            messageInput.value = "";
        }
    }
</script>




     <!-- Sidebar -->
        <div 
            class="fixed top-0 left-0 w-50 sm:w-64 h-full bg-white shadow-lg transform -translate-x-full transition-transform duration-300 ease-in-out"
            :class="open ? 'translate-x-0' : '-translate-x-full'" style="background-color: #604020 ;"
        >
            <div class="p-4 flex justify-between items-start h-40" >
                <div class="flex items-center justify-center h-26">
                    <img src="/img/logo2.png" alt="" class="w-30">
                </div>
                
                <button @click="open = false" class="text-white text-4xl font-semibold">&times;</button>
            </div>
            <div class="px-4">            
            <nav class="py-12 space-y-2 rounded-sm " style="background-color: #ac73395e;">
                <a href="/receptionist/dashboard" class="block px-4 py-2 text-white text-xl " >Home</a>
                <a href="/receptionist/booking" class="block px-4 py-2 text-white text-xl ">Book</a>
                <a href="/receptionist/checkin" class="block px-4 py-2 text-white text-xl ">Check-In</a>
                <a href="/receptionist/checkout" class="block px-4 py-2 text-white text-xl ">Check-Out</a>
                <a href="/receptionist/assignrooms" class="block px-4 py-2 text-white text-xl ">Assign Rooms</a>
                <a href="/receptionist/roomstatus" class="block px-4 py-2 text-white text-xl ">Room Status</a>
                <a href="/receptionist/rooms" class="block px-4 py-2 text-white text-xl ">Rooms</a>
                <a href="/receptionist/specialrequest" class="block px-4 py-2 text-white text-xl " style="background-color: #cc99664a; box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;"class="block px-4 py-2 text-white text-xl ">Special Request</a>
                <a href="#" class="block px-4 py-2 text-white text-l font-semibold  mt-4">Log Out</a>
            </nav>
            </div>

        </div>


<div class="space-y-6 md:px-10 lg:px-20 xl:px-40 2xl:px-60">
    <p class="text-2xl font-bold italic mt-2 ml-2" style="color: #231302; box-shadow:">Special Request</p>

<form class="max-w-lg mx-auto bg-white p-6 shadow-md rounded-lg">
    <h2 class="text-xl font-semibold mb-4 text-gray-700">Special Request Form</h2>

    <!-- Room Number Dropdown -->
    <div class="mb-4">
        <label for="roomNo" class="block text-sm font-medium text-gray-700">Room Number</label>
        <select id="roomNo" name="roomNo" class="w-full mt-1 p-2 border border-gray-300 rounded-md focus:ring focus:ring-gray-400">
            <option value="" disabled selected>Select Room No.</option>
        </select>
    </div>

    <!-- Description -->
    <div class="mb-4">
        <label for="description" class="block text-sm font-medium text-gray-700">Request Description</label>
        <textarea id="description" name="description" rows="4" class="w-full mt-1 p-2 border border-gray-300 rounded-md focus:ring focus:ring-gray-400"
            placeholder="Enter your request details..."></textarea>
    </div>

    <!-- Submit Button -->
    <button type="submit" class="w-full bg-[#604020] text-white py-2 px-4 rounded-md hover:bg-opacity-90">
        Submit Request
    </button>
</form>

<script>
    // Fetch room numbers from JSON file
    fetch('/rooms.json') // Ensure rooms.json is in your public directory
        .then(response => response.json())
        .then(data => {
            const roomDropdown = document.getElementById("roomNo");
            roomDropdown.innerHTML = '<option value="" disabled selected>Select Room</option>';
            data.forEach(room => {
                const option = document.createElement("option");
                option.value = room.roomNo;
                option.textContent = room.roomNo;
                roomDropdown.appendChild(option);
            });
        })
        .catch(error => console.error("Error fetching room data:", error));
</script>



       

    </div>


</div>
</body>
</html>